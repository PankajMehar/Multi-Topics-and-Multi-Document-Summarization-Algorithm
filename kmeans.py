# -*- coding: utf-8 -*-
# @Time    : 2018/1/31 下午 05:12
# @Author  : Yuhsuan
# @File    : kmeans.py
# @Software: PyCharm

from sklearn.cluster import KMeans,DBSCAN
from sklearn import manifold
import numpy as np
X = np.array([[1, 2], [1, 4], [1, 0],
              [4, 2], [4, 4], [4, 0]])

for i in range(2,6):
    kmeans = KMeans(n_clusters=i, random_state=0).fit(X)
    print(kmeans.inertia_)

dict = {1: [-0.53602003, -0.53907582], 2:[-0.32700465,  0.93319942], 3: [ 0.32313686, -0.08701554], 4: [ 0.24705844, -0.08686067], 5: [ 0.93097182, -0.50431674], 6: [-0.85581135, -0.06371861], 7: [ 0.21192621, -0.05067496], 8: [0.19293187, 0.01540182], 9: [-0.75094071,  0.44256767], 10: [-0.32050582, -0.97293578], 11: [-0.50839871, -0.62225899], 12: [-0.60120688, -0.61641571], 13: [1.        , 0.37435224], 14: [0.19881017, 0.84052933], 15: [0.2284431 , 0.94531356], 16: [0.26741948, 0.01508187], 17: [ 0.29919018, -0.02317307]}
# dict = {1: array([ 0.46453795, -0.44776905]), 2: array([0.87424865, 0.49351901]), 3: array([-0.40936483,  0.31129705]), 4: array([-0.47941081,  0.30007575]), 5: array([0.20996246, 0.96349057]), 6: array([-0.55624988, -0.87436511]), 7: array([-0.47683497,  0.40175191]), 8: array([-0.54734718,  0.39167452]), 9: array([0.53804948, 0.73957384]), 10: array([ 0.5168081 , -0.87981794]), 11: array([ 0.54817677, -0.48084924]), 12: array([ 0.47697527, -0.53568985]), 13: array([1.        , 0.01760488]), 14: array([-0.55656684, -0.54579269]), 15: array([-0.64807132, -0.55762132]), 16: array([-0.52038195,  0.32980546]), 17: array([-0.43453089,  0.37311221])}
print(dict)

pos = []
for i in dict:
    print(dict[i])
    pos.append(dict[i])

pos = [[-0.5989712550060963, -0.5966036656548265], [0.8575690472930131, 0.7505184284097629], [0.1758430163283783, 0.10741788999965059], [0.06930379685437249, 0.12782977440157242], [-0.9457776478608402, -0.20835452794080658], [1.0, 0.010475654408971335], [0.11467277512073425, 0.13785088716868532], [0.025360351651341234, 0.08022040885314213], [0.5573123186951514, -0.8470792674642248], [-0.03151889559724265, -0.9623961743807179], [-0.6428772331414874, -0.5271651648789081], [-0.557767488041526, -0.5173147437838467], [-0.6863744054345434, 0.6462958190472118], [0.23005715218777484, 0.8938020977047086], [0.21770218267103253, 0.7928964295909868], [0.08653974962517452, 0.04639141214169884], [0.1289265346547632, 0.06521474237693924]]

X = np.array(pos)

db = DBSCAN(eps=0.1118034 ,min_samples=1).fit(X)

label = list(db.labels_)
sample = list(db.core_sample_indices_)
res = []
for i in range(len(label)):
    res.append([label[i],sample[i]+1])
print(i,res)
labels = db.labels_
n_clusters_ = len(set(labels)) - (1 if -1 in labels else 0)
print(n_clusters_)